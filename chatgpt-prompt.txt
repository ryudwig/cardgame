[step : 요구사항 명세서 작성 요청 -1]

영어 학습을 돕는 플래시카드 앱을 만들고 싶습니다. 이를 위한 소프트웨어 요구사항 명세서를 작성하는 데 도움이 필요합니다.

구현은 TypeScript와 Vue를 기반 프레임워크로 활용하여 웹 애플리케이션 형태로 만들려고 합니다.

필요하다고 생각하는 주요 기능은 다음과 같습니다:

각 카드는 영어 단어로 되어 있어야 하고, 이에 대한 한글 단어를 학습할 수 있어야 합니다.
먼저 영어로 된 앞면이 화면에 표시되고 사용자가 마우스 클릭을 통해 카드를 뒤집는 기능이 있어야 합니다.
뒤집은 후 각 카드에는 한글 단어가 정답으로 표시되고, 그 아래에 두 개의 버튼이 있어야 합니다.
플레이어는 아는 단어 있지 모르는 단어인지를 버튼을 통해 표시할 수 있습니다.

게임에는 아래와 같은 모드가 있어 플레이어가 선택 가능합니다.
모르는 단어 암기 모드: 모르는 카드만 다시 할 수 있어야 합니다.
퀴즈/시험 모드: 객관식 또는 빈칸 채우기 옵션.
통계 페이지: 학습한 카드 수, 정답과 오답을 추적할 수 있습니다.

위 소프트웨어에 대한 요구사항 명세서의 출력은 마크다운 형식으로 표시해야 합니다.

최종적으로 요구사항 명세서를 출력하기 전에 불분명한 부분이 있다면 나에게 후속 질문을 통해 확인해 주세요.

-------------

nvm use 22.16.0
-------------

[step : 요구사항 명세서 작성을 위한 추가 답변 -2]
1. 카드 데이터
 - h2 db에 저장하고, db에 CRUD하기 위한 backend application을 spring boot로 구성해줘. 
 - 카드의 카테고리는 동물, 음식, 동사 3가지 분류를 선택할 수 있게 해줘

-------------

[step : 요구사항 명세서 작성을 위한 추가 답변 -3]
2. 퀴즈/시험모드
 - 객관식 문제의 오답은 같은 카테고리 내에서 자동 추출해줘.
 - 빈칸 채우기 문제는 영어 -> 한글 한 방향만 지원해줘.
3. 통계/진행 데이터
 - 통계는 백엔드 DB에 저장해줘.
 - 통계는 카테고리별로 집계해줘.
4. UI/UX
 - 홈화면, 카테고리 선택, 학습/퀴즈/통계는 각각의 페이지 구성하고 고정된 좌측 메뉴를 통해 이동하도록 구성해줘.
 - 카드 플립 애니메이션을 적용해줘.
5. 기타
 - 한글만 지원해줘.
 - 사용자 계정/로그인 없어.

-------------

[step : TODO 리스트 만들기]
[mode : Agent]
소프트웨어 요구사항(specification.md)을 참고하여 한 번에 한 가지 기능 씩 단계적으로 구현하는 데 도움이 되는 체크리스트를 만들어줘. 각 항목의 완료를 표시할 수 있는 체크버튼가 있는 할 일 목록(TODO.md)을 만들어줘. 
각 기능 간 의존 순서를 고려하고, 쉬운 기능부터 어려운 기능까지 단계별로 순서를 정해줘. 
목록의 각 항목에 대해서 완료되었음을 확인할 수 있는 승인 기준(acceptance criteria)도 정의해줘.  출력은 마크다운 형식이며 TODO.md 파일로 저장해줘.

-----------
[step : 구현 1단계]
소프트웨어 요구사항(specification.md)과 할 일 목록(TODO.md)을 사용해 현재 디렉터리에서 프로젝트의 "1단계" 만 구현해줘. 
한 단계를 승인 한 후는 각 승인 기준(acceptance criteria)이 충족 되었는지 확인한 후에 할 일 목록(TODO.md)에 항목을 완료로 표시하세요.
앞으로도 한 단계씩 단계적인 구현과 확인을 요청할 거야.
-----------
[step : 구현 2단계]
소프트웨어 요구사항(specification.md)과 할 일 목록(TODO.md)을 사용해서, 2단계 데이터 모델 및 기본 API 구현'을 진행해줘
-----------
[step : 구현 3단계]
소프트웨어 요구사항(specification.md)과 할 일 목록(TODO.md)을 사용해서, 3단계 데이터 모델 및 기본 API 구현'을 진행해줘
-----------

[3단계 후 UI 수정]

전체화면으로 넓게 출력되게 해줘.
UI구성을 붙여넣은 이미지처럼 정리해줘. (홈화면에서도 메뉴는 유지해줘)

[git등록]
이 프로젝트를 git을 통해 형상관리해줘.


[리팩터링] <- Max Mode 활성화
코드베이스를 분석하고, 문제를 식별하고, 동작을 유지하면서 리팩터링합니다. clean code 원칙과 모범 사례를 따릅니다. 또한 주어진 rule(.mdc)을 참조합니다.


